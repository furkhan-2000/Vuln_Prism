apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cyber.deployment.name }}
  namespace: {{ .Values.cyber.deployment.namespace }}
  labels:
    tier: {{ .Values.cyber.deployment.labels.tier }}
    prod: {{ .Values.cyber.deployment.labels.prod }}
  annotations:
    "prometheus.io/scrape": {{ index .Values.cyber.deployment.annotations "prometheus.io/scrape" | quote }}
    "prometheus.io/path": {{ index .Values.cyber.deployment.annotations "prometheus.io/path" | quote }}
    "prometheus.io/port": {{ index .Values.cyber.deployment.annotations "prometheus.io/port" | quote }}
spec:
  replicas: {{ .Values.cyber.deployment.spec.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.cyber.deployment.spec.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.cyber.deployment.spec.strategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      tier: {{ .Values.cyber.deployment.spec.selector.matchLabels.tier }}
  template:
    metadata:
      labels:
        tier: {{ .Values.cyber.deployment.spec.template.labels.tier }}
    spec:
      serviceAccountName: {{ .Values.cyber.deployment.spec.template.spec.serviceAccountName }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  tier: {{ (index .Values.cyber.deployment.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution 0).labelSelector.matchLabels.tier }}
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsNonRoot: {{ .Values.cyber.deployment.spec.template.spec.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.cyber.deployment.spec.template.spec.securityContext.runAsUser }}
        runAsGroup: {{ .Values.cyber.deployment.spec.template.spec.securityContext.runAsGroup }}
        fsGroup: {{ .Values.cyber.deployment.spec.template.spec.securityContext.fsGroup }}
      containers:
{{- range .Values.cyber.deployment.spec.template.spec.containers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: {{ .securityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .securityContext.readOnlyRootFilesystem }}
          ports:
            - containerPort: {{ (index .ports 0).containerPort }}
          resources:
            requests:
              cpu: {{ .resources.requests.cpu }}
              memory: {{ .resources.requests.memory }}
            limits:
              cpu: {{ .resources.limits.cpu }}
              memory: {{ .resources.limits.memory }}
          readinessProbe:
            httpGet:
              path: {{ .readinessProbe.httpGet.path }}
              port: {{ .readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .readinessProbe.failureThreshold }}
          livenessProbe:
            tcpSocket:
              port: {{ .livenessProbe.tcpSocket.port }}
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .livenessProbe.failureThreshold }}
{{- end }}