apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: vuln-pc
value: 100000
preemptionPolicy: PreemptLowerPriority
globalDefault: false
description: Priority class for critical Vulnâ€‘Prism
---
apiVersion: v1
kind: Secret
metadata:
  name: openrouter-secret
  namespace: mustang
type: Opaque
stringData:
  DEEPSEEK_API_KEY: "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"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vuln
  namespace: mustang
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vuln-role
  namespace: mustang
rules:
  - apiGroups: ["", "apps", "rbac.authorization.k8s.io", "networking.k8s.io", "autoscaling"]
    resources: ["pods", "replicasets", "deployments", "secrets", "horizontalpodautoscalers", "verticalpodautoscalers"]
    verbs: ["list", "get", "watch", "create", "delete", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vuln-rlbng
  namespace: mustang
subjects:
  - kind: ServiceAccount
    name: vuln
    namespace: mustang
roleRef:
  kind: Role
  name: vuln-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: vuln-dep
  namespace: mustang
  labels:
    prod: "true"
    tier: bmw
  annotations: 
    prometheus.io/scrape: "true" 
    prometheus.io/port: "3000" 
spec:
  replicas: 2
  strategy:
    canary:
      steps:
        - setWeight: 20
        - pause: {duration: 120}
        - setWeight: 100
  selector:
    matchLabels:
      tier: bmw
  template:
    metadata:
      labels:
        tier: bmw
    spec:
      priorityClassName: vuln-pc
      serviceAccountName: vuln
      affinity: 
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution: 
            - labelSelector: 
                matchLabels: 
                  tier: bmw 
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: vuln-con
          image: furkhan2000/shark:front-end
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true 
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: openrouter-secret
          resources:
            requests:
              cpu: "250m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "650Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 8
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 8
            periodSeconds: 10       
---
apiVersion: v1
kind: Service
metadata:
  name: vuln-svc
  namespace: mustang
spec:
  selector:
    tier: bmw
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1 
kind: NetworkPolicy 
metadata: 
  name: vuln-np 
  namespace: mustang 
spec:   
  podSelector: 
    matchLabels: 
      tier: bmw 
  policyTypes: 
  - Ingress 
  - Egress 
  ingress: 
    - from:    
      - ipBlock: 
          cidr: 0.0.0.0/0  
      ports: 
        - protocol: TCP 
          port: 3000 
  egress: 
    - to:  
      - ipBlock: 
          cidr: 0.0.0.0/0 
      ports: 
        - protocol: TCP 
          port: 443 
        - protocol: TCP 
          port: 80 
        - protocol: UDP 
          port: 53 
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vuln-hpa
  namespace: mustang
spec:
  scaleTargetRef:
    apiVersion: argoproj.io/v1alpha1
    kind: Rollout
    name: vuln-dep
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75