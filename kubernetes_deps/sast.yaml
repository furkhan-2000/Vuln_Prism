# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: sast-config-rds
#   namespace: mustang
# data:
#   DB_HOST: "your-rds-endpoint.amazonaws.com"
#   DB_USER: "admin"
#   DB_PORT: "3306"
#   DB_NAME: "vulnprism_sast"
#   ENABLE_DATABASE: "true"
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: sast-secrets-rds
#   namespace: mustang
# type: Opaque
# stringData:
#   DB_PASSWORD: "your-db-password"
# ---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sast
  namespace: mustang
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sast-role
  namespace: mustang
rules:
  - apiGroups: ["", "apps", "rbac.authorization.k8s.io", "networking.k8s.io", "batch", "autoscaling"]
    resources: ["pods", "replicasets", "deployments", "networkpolicies", "horizontalpodautoscalers", "verticalpodautoscalers", "configmaps"]
    verbs: ["get", "create", "list", "watch", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sast-rb
  namespace: mustang
subjects:
  - kind: ServiceAccount
    name: sast
    namespace: mustang
roleRef:
  kind: Role
  name: sast-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sast-pv
spec:
  capacity:
    storage: 700Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /tmp/sast
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sast-pvc
  namespace: mustang
spec:
  volumeName: sast-pv
  storageClassName: ""
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: sast-dep
  namespace: mustang
  labels:
    tier: porsche
    prod: "true"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "5050"
spec:
  replicas: 2
  strategy:
    canary:
      steps:
        - setWeight: 20
        - pause: {duration: 60}
        - setWeight: 100
  selector:
    matchLabels:
      tier: porsche
  template:
    metadata:
      labels:
        tier: porsche
    spec:
      serviceAccountName: sast
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  tier: porsche
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: sast-con
          image: furkhan2000/shark:sast
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 5050
          volumeMounts:
            - name: temp-storage
              mountPath: /home/jenkins
            - name: tmp-storage
              mountPath: /tmp
          # Future RDS Integration - Uncomment when needed
          # envFrom:
          #   - configMapRef:
          #       name: sast-config-rds
          #   - secretRef:
          #       name: sast-secrets-rds
          resources:
            requests:
              cpu: "250m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "650Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 5050
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 5050
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 10
      volumes:
        - name: temp-storage
          emptyDir: {}
        - name: tmp-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sast-svc
  namespace: mustang
spec:
  selector:
    tier: porsche
  ports:
    - port: 5050
      protocol: TCP
      targetPort: 5050
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sast-np
  namespace: mustang
spec:
  podSelector:
    matchLabels:
      tier: porsche
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 5050
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
        - protocol: UDP
          port: 53
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sast-hpa
  namespace: mustang
spec:
  scaleTargetRef:
    apiVersion: argoproj.io/v1alpha1
    kind: Rollout
    name: sast-dep
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75